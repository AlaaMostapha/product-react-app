{"version":3,"sources":["Route/history.js","components/Card/style.js","components/Card/Card.js","components/LoadingIndicator/LoadingIndicator.js","redux/constants/actionTypes.js","redux/actions/cart.js","components/quantity/quantity.js","components/Btn/Btn.js","redux/actions/actions.js","pages/productList/productList.js","redux/actions/product.js","pages/productDetails/productDetails.js","components/table/table.js","pages/ReviewOrder/ReviewOrder.js","pages/Form/TextError.js","pages/Form/Input.js","pages/Form/Textarea.js","pages/Form/RadioButton.js","pages/Form/Checkbox.js","pages/Form/DatePicker.js","pages/Form/FormikControl.js","pages/UserFormOrderNow/OrderNow.js","pages/Login/LoginForm.js","redux/actions/login.js","pages/Register/Register.js","Route/index.js","redux/reducers/cart.js","redux/reducers/index.js","redux/reducers/products.js","redux/reducers/product.js","redux/reducers/login.js","network/handlers/products.js","network/BaseUrl.js","network/api/products.js","redux/saga/products.js","network/handlers/product.js","network/api/product.js","redux/saga/product.js","network/handlers/login.js","network/login.js","network/api/login.js","redux/saga/login.js","redux/saga/index.js","redux/store/index.js","containers/header/style.js","components/Menu/Menu.js","components/MediaControlCard/style.js","components/MediaControlCard/MediaControlCard.js","containers/Cart/Cart.js","containers/header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["history","useStyles","makeStyles","root","maxWidth","media","height","MediaCard","title","discription","img","alt","btn","classes","className","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","color","LoadingIndicator","type","width","timeout","PRODUCT_REQUEST","PRODUCT_RESPONSE","PREQUEST_SINGLLE_PRODUCT","GET_SINGLLE_PRODUCT","ADD_ITEM_TO_CART","DELETE_ITEM_IN_CART","INCREMENT_QUANTITY","DECREMENT_QUANTITY","REQUEST_USERS_FROM_FAKE_API","GET_USERS_FROM_FAKE_API","CHECK_LOGIN_USER","addItemInCart","item","actionType","payload","newItem","deleteItemInCart","deletedItem","Quantity","props","dispatch","useDispatch","inputRef","React","useRef","useState","quantity","inputValue","setinputValue","useEffect","id","onClick","cartActions","value","ref","onChange","event","theme","margin","spacing","CreateButton","text","href","rest","Button","showProducts","response","products","ProductList","cart","useSelector","state","cartReducer","productsReducer","loading","loader","indexesOfCartItems","map","cartItem","findIndex","itemx","i","length","splice","Container","Grid","container","product","index","xs","Paper","push","mb","description","style","checkProduct","find","itemIndexInProducts","productsActions","addItem","createList","showSingleProduct","singleProduct","ProductDetails","singleProductReducer","productId","match","params","singleProductId","productActions","display","textAlign","src","price","table","minWidth","tabelHeadings","fontWeight","BasicTable","tableHeadings","arrayItems","TableContainer","Table","aria-label","TableHead","TableRow","tableHeading","TableCell","TableBody","ReviewOrder","cartLoader","carttotal","setcarttotal","reduce","accumlator","toFixed","scope","alignItems","justifyContent","removeItemFromCart","name","colspan","TextError","class","children","Input","label","htmlFor","textError","Textarea","as","RadioButton","options","field","option","Fragment","checked","key","Checkbox","includes","DatePicker","form","setFieldValue","selected","val","errorMsg","FormikControl","control","OrderNow","validationSchema","Yup","shape","address","required","phoneNumber","email","initialValues","onSubmit","values","console","log","formik","disabled","dirty","isValid","connect","users","loginReducer","check","requestUsersFromApi","checkLoginUser","user","actions","ValidationSchema","password","UserValues","submitProps","autoComplete","to","Register","firstName","lastName","genderSelect","verifyRadio","favouriteChecbox","birthday","nullable","min","retypePassword","oneOf","genderOtions","verifyOtions","favouriteOtions","Routes","location","exact","path","LoginForm","initState","itemsNum","rootReducers","combineReducers","action","singleProductloader","existItem","filter","newCart","JSON","parse","stringify","indexOf","found","handleError","error","Promise","reject","axiosInstance","axios","create","baseURL","interceptors","request","use","Handlers","getProductsFromApi","a","get","handlGetProducts","call","put","data","getSingleProductFromApi","handlGetSingleProduct","handlGetUsers","watchAll","all","takeEvery","actionTypes","sagaMiddleWare","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","flexGrow","menuButton","marginRight","FadeMenu","iconType","anchorEl","setAnchorEl","open","Boolean","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","TransitionComponent","Fade","items","details","flexDirection","content","flex","cover","controls","paddingLeft","paddingBottom","playIcon","MediaControlCard","quantityComp","deleteBtn","CardActions","Cart","onDelete","Header","redirectToReviewPage","AppBar","position","Toolbar","textDecoration","MenuItem","Badge","badgeContent","slice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.218858b0.chunk.js","sourcesContent":["import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport \"./Card.scss\";\r\nimport { useStyles } from \"./style\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function MediaCard({ title, discription, img, alt, btn }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={img}\r\n          alt={alt}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n            className=\"limitCharacters\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n            className=\"limitCharacters\"\r\n          >\r\n            {discription}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      {btn ? btn : \"\"}\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nexport default function LoadingIndicator() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","//PRODUCTS\r\nexport const PRODUCT_REQUEST = \"PRODUCT_REQUEST\";\r\nexport const PRODUCT_RESPONSE = \"PRODUCT_RESPONSE\";\r\nexport const LOADING = \"LOADING\";\r\n\r\n//SINGLE PRODUCT\r\nexport const PREQUEST_SINGLLE_PRODUCT = \"PREQUEST_SINGLLE_PRODUCT\";\r\nexport const GET_SINGLLE_PRODUCT = \"GET_SINGLLE_PRODUCT\";\r\n\r\n//CART\r\nexport const ADD_ITEM_TO_CART = \"ADD_ITEM_TO_CART\";\r\nexport const DELETE_ITEM_IN_CART = \"DELETE_ITEM_IN_CART\";\r\n//quantity\r\nexport const INCREMENT_QUANTITY = \"INCREMENT_QUANTITY\";\r\nexport const DECREMENT_QUANTITY = \"DECREMENT_QUANTITY\";\r\n\r\n//login\r\nexport const REQUEST_USERS_FROM_FAKE_API = \"REQUEST_USERS_FROM_FAKE_API\";\r\nexport const GET_USERS_FROM_FAKE_API = \"GET_USERS_FROM_FAKE_API\";\r\nexport const CHECK_LOGIN_USER = \"CHECK_LOGIN_USER\";\r\n","import * as actionType from \"../constants/actionTypes\";\r\n\r\n//cart\r\nexport const addItemInCart = (item) => ({\r\n  type: actionType.ADD_ITEM_TO_CART,\r\n  payload: {\r\n    newItem: item,\r\n  },\r\n});\r\n\r\nexport const deleteItemInCart = (item) => ({\r\n  type: actionType.DELETE_ITEM_IN_CART,\r\n  payload: {\r\n    deletedItem: item,\r\n  },\r\n});\r\n\r\nexport const incrementQuantity = (item) => ({\r\n  type: actionType.INCREMENT_QUANTITY,\r\n  payload: {\r\n    item,\r\n  },\r\n});\r\nexport const decrementQuantity = (item) => ({\r\n  type: actionType.DECREMENT_QUANTITY,\r\n  payload: {\r\n    item,\r\n  },\r\n});\r\n","import \"./quantity.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as cartActions from \"../../redux/actions/cart\";\r\n\r\nfunction Quantity(props) {\r\n  const { item } = props;\r\n  const dispatch = useDispatch();\r\n  const inputRef = React.useRef(0);\r\n  //set default value of input value with quantity from another pages\r\n  const [inputValue, setinputValue] = useState(item.quantity);\r\n  useEffect(() => {\r\n    setinputValue(item.quantity);\r\n  }, [item.quantity]);\r\n\r\n  const decreaseValue = () => {\r\n    dispatch(cartActions.decrementQuantity(item));\r\n    if (item.quantity <= 0) {\r\n      item.quantity = 0;\r\n      setinputValue(item.quantity);\r\n    }\r\n    setinputValue(item.quantity);\r\n  };\r\n\r\n  const increaseValue = () => {\r\n    dispatch(cartActions.incrementQuantity(item));\r\n    setinputValue(item.quantity);\r\n  };\r\n  const handleChange = (event) => {\r\n    // console.log(props)\r\n    // setinputValue(event.target.value);\r\n    //   console.log(onChangeQuantity(inputValue))\r\n  };\r\n  return (\r\n    <div className=\"quantity\">\r\n      <div\r\n        className=\"value-button\"\r\n        id=\"decrease\"\r\n        onClick={decreaseValue}\r\n        value=\"Decrease Value\"\r\n      >\r\n        -\r\n      </div>\r\n      <input\r\n        type=\"number\"\r\n        id=\"number\"\r\n        value={inputValue}\r\n        ref={inputRef}\r\n        onChange={handleChange}\r\n      />\r\n      <div\r\n        className=\"value-button\"\r\n        id=\"increase\"\r\n        onClick={increaseValue}\r\n        value=\"Increase Value\"\r\n      >\r\n        +\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Quantity;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CreateButton(props) {\r\n  const { color, text, href, onClick, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color={color}\r\n        href={href}\r\n        onClick={onClick}\r\n        {...rest}\r\n      >\r\n        {text}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import * as actionType from \"../constants/actionTypes\";\r\n\r\n//PRODUCTS\r\nexport const getProducts = () => ({\r\n  type: actionType.PRODUCT_REQUEST,\r\n});\r\nexport const showProducts = (response) => ({\r\n  type: actionType.PRODUCT_RESPONSE,\r\n  payload: {\r\n    products: response,\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport \"./productList.scss\";\r\n//material ui components\r\nimport MediaCard from \"../../components/Card/Card\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n//custom components\r\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\r\nimport Quantity from \"../../components/quantity/quantity\";\r\nimport CreateButton from \"../../components/Btn/Btn\";\r\n//store\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as productsActions from \"../../redux/actions/actions\";\r\nimport * as cartActions from \"../../redux/actions/cart\";\r\n//history\r\nimport history from \"../../Route/history\";\r\nfunction ProductList() {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cartReducer.cart);\r\n  const products = useSelector((state) => state.productsReducer.products);\r\n  const loading = useSelector((state) => state.productsReducer.loader);\r\n  useEffect(() => {\r\n    //when component mount get all products\r\n    dispatch(productsActions.getProducts());\r\n  }, []);\r\n  useEffect(() => {\r\n    //if there are items in cart\r\n    if (cart) {\r\n      //get there indexes in product list\r\n      let indexesOfCartItems = cart.map((cartItem) => {\r\n        return products.findIndex((itemx) => itemx.id === cartItem.id);\r\n      });\r\n      //replace them with items in product list\r\n      //to get them updated with last quantity applied in cart at the same time\r\n      for (let i = 0; i < indexesOfCartItems.length; i++) {\r\n        products.splice(indexesOfCartItems[i], 1, cart[i]);\r\n      }\r\n    }\r\n  }, [products, cart]);\r\n  const addItem = (item) => {\r\n    //add clicked product to cart\r\n    dispatch(cartActions.addItemInCart(item));\r\n    //check if this item is in cart & has quantity return it and update products\r\n    const checkProduct = cart.find((product) => product.id === item.id); //check if it was in cart\r\n    if (checkProduct) {\r\n      const itemIndexInProducts = products.findIndex(\r\n        (itemx) => itemx.id === item.id\r\n      );\r\n      //get it's index from products\r\n      products[itemIndexInProducts] = checkProduct; //replace it with old one\r\n      if (itemIndexInProducts !== -1) {\r\n        dispatch(productsActions.showProducts(products)); //update\r\n      }\r\n    }\r\n  };\r\n  const createList = () => {\r\n    if (products) {\r\n      return (products || []).map((product, index) => {\r\n        return (\r\n          <Grid item xs={3} key={product.id} className=\"grid-custom\">\r\n            <Paper\r\n              key={product.id}\r\n              onClick={() => history.push(`/products/${product.id}`, product)}\r\n              mb=\"2rem\"\r\n            >\r\n              <MediaCard\r\n                key={product.id}\r\n                title={product.title}\r\n                discription={product.description}\r\n                img={product.image}\r\n                alt={product.title}\r\n              />\r\n            </Paper>\r\n            <div className=\"text-center\" style={{ margin: \"5px\" }}>\r\n              {product.quantity > 0 ? (\r\n                <Quantity item={product} />\r\n              ) : (\r\n                <CreateButton\r\n                  color=\"primary\"\r\n                  text=\"Add to cart\"\r\n                  onClick={() => addItem(product)}\r\n                />\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Container maxWidth=\"lg\" className=\"ProductListContainer\">\r\n      {loading ? (\r\n        <LoadingIndicator />\r\n      ) : (\r\n        <Grid container spacing={2}>\r\n          {createList()}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import * as actionType from \"../constants/actionTypes\";\r\n\r\n//single product\r\nexport const getSingleProduct = (id) => ({\r\n  type: actionType.PREQUEST_SINGLLE_PRODUCT,\r\n  payload: {\r\n    singleProductId: id,\r\n  },\r\n});\r\nexport const showSingleProduct = (response) => ({\r\n  type: actionType.GET_SINGLLE_PRODUCT,\r\n  payload: {\r\n    singleProduct: response,\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport CreateButton from \"../../components/Btn/Btn\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as productActions from \"../../redux/actions/product\";\r\nimport * as cartActions from \"../../redux/actions/cart\";\r\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\r\nimport Quantity from \"../../components/quantity/quantity\";\r\nfunction ProductDetails(props) {\r\n  const dispatch = useDispatch();\r\n  const singleProduct = useSelector(\r\n    (state) => state.singleProductReducer.singleProduct\r\n  );\r\n  const cart = useSelector((state) => state.cartReducer.cart);\r\n  useEffect(() => {\r\n    const { productId } = props.match.params;\r\n    // request item from api\r\n    dispatch(productActions.getSingleProduct(productId));\r\n  }, []);\r\n  useEffect(() => {\r\n    //check if this item is in cart return it from cart with it's quantity\r\n    const product = cart.find((product) => product.id === singleProduct.id);\r\n    if (product) {\r\n      dispatch(productActions.showSingleProduct(product));\r\n    } else {\r\n      dispatch(productActions.showSingleProduct(singleProduct));\r\n    }\r\n  }, [cart]);\r\n\r\n  const addItem = (singleProduct) => {\r\n    //add item to cart\r\n    dispatch(cartActions.addItemInCart(singleProduct));\r\n  };\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {singleProduct ? (\r\n        <div style={{ display: \"flex\", textAlign: \"left\" }}>\r\n          <img\r\n            src={singleProduct.image}\r\n            alt={singleProduct.alt}\r\n            style={{ height: \"250px\", margin: \"10px\" }}\r\n          />\r\n          <div>\r\n            <h3>{singleProduct.title}</h3>\r\n            <h4>Description:</h4>\r\n            <p>{singleProduct.description}</p>\r\n            <div>\r\n              <h4>Price:</h4>\r\n              <p>{singleProduct.price}</p>\r\n            </div>\r\n            {singleProduct.quantity ? (\r\n              <Quantity item={singleProduct} />\r\n            ) : (\r\n              <CreateButton\r\n                color=\"primary\"\r\n                text=\"Add to cart\"\r\n                onClick={() => addItem(singleProduct)}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ProductDetails;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./table.scss\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tabelHeadings: {\r\n    fontWeight: 800,\r\n  },\r\n});\r\n\r\nexport default function BasicTable(props) {\r\n  const { tableHeadings, arrayItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {tableHeadings.map((tableHeading) => {\r\n              return (\r\n                <TableCell className={classes.tabelHeadings}>\r\n                  {tableHeading}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{arrayItems}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import \"./ReviewOrder.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Quantity from \"../../components/quantity/quantity\";\r\nimport CreateButton from \"../../components/Btn/Btn\";\r\nimport * as cartActions from \"../../redux/actions/cart\";\r\nimport BasicTable from \"../../components/table/table\";\r\nimport { TableCell, TableRow } from \"@material-ui/core\";\r\nfunction ReviewOrder(props) {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cartReducer.cart);\r\n  const cartLoader = useSelector((state) => state.cartReducer.cartLoader);\r\n  //each product display with quantity and delete btn //rest unit price and total price\r\n  const [carttotal, setcarttotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setcarttotal(\r\n      cart\r\n        .reduce(function (accumlator, product) {\r\n          return accumlator + product.price * product.quantity;\r\n        }, 0)\r\n        .toFixed(3)\r\n    );\r\n  }, [cart]);\r\n  const removeItemFromCart = (product) => {\r\n    dispatch(cartActions.deleteItemInCart(product));\r\n  };\r\n  const redirectToUserForm = () => {\r\n    return props.history.push(`/OrderNow`);\r\n  };\r\n  const tableHeadings = [\"Item\", \"Unit Price\", \"Total Price\", \"Delete\"];\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className=\"ProductListContainer\">\r\n      <h2 className=\"text-center\">Review Your Order</h2>\r\n      {cartLoader ? (\r\n        <LoadingIndicator />\r\n      ) : (\r\n        <BasicTable\r\n          tableHeadings={tableHeadings}\r\n          arrayItems={cart.map((product, index) => (\r\n            <>\r\n              <TableRow key={product.name}>\r\n                <TableCell component=\"th\" scope=\"row\" display=\"flex\">\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <img\r\n                        src={product.image}\r\n                        alt={product.title}\r\n                        className=\"reviewPageImg\"\r\n                      />\r\n                      {product.title}\r\n                    </div>\r\n                    <Quantity item={product} />\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>{product.price}</TableCell>\r\n                <TableCell>\r\n                  {(product.price * product.quantity).toFixed(3)}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <CreateButton\r\n                    color=\"secondary\"\r\n                    text={<DeleteIcon />}\r\n                    onClick={() => removeItemFromCart(product)}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n              {index === cart.length - 1 && (\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Total</b>\r\n                  </TableCell>\r\n                  <TableCell colspan={3} style={{ textAlign: \"center\" }}>\r\n                    <b>{carttotal}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </>\r\n          ))}\r\n        />\r\n      )}\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <CreateButton\r\n          color=\"primary\"\r\n          text=\"Order Now\"\r\n          onClick={redirectToUserForm}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ReviewOrder;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return <div class=\"error\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React from 'react';\r\nimport {Field , ErrorMessage } from 'formik';\r\nimport textError from './TextError';\r\n\r\nfunction Input(props) {\r\n    const {label,name,...rest}= props\r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={textError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react';\r\nimport {Field , ErrorMessage } from 'formik';\r\nimport TextError from './TextError';\r\nfunction Textarea(props) {\r\n    const{label,name,...rest}=props\r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as=\"textarea\" name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textarea\r\n","import React from 'react';\r\nimport {Field , ErrorMessage } from 'formik';\r\nimport textError from './TextError';\r\n\r\nfunction RadioButton(props) {\r\n    const {label,name,options,...rest}= props\r\n    return (\r\n        <div>\r\n           <label htmlFor={name}>{label}</label>\r\n           <Field name={name}{...rest}>\r\n            {\r\n                ({field})=>{\r\n                    return options.map(option=>{\r\n                        return (\r\n                            <React.Fragment key={option.key}>\r\n                                <input\r\n                                type='radio'\r\n                                {...field} //should be there!\r\n                                id={option.value}\r\n                                value={option.value}\r\n                                checked={field.value===option.value}\r\n                                />\r\n                                <label htmlFor={option.value}>{option.key}</label>\r\n                            </React.Fragment>\r\n                        )\r\n                    })\r\n                }\r\n            }\r\n           </Field>\r\n            <ErrorMessage name={name} component={textError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioButton\r\n// <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\">\r\n//<label for=\"male\">Male</label> ","import React from 'react'\r\nimport {Field , ErrorMessage } from 'formik';\r\nimport TextError from './TextError';\r\n\r\nfunction Checkbox(props) {\r\n    const{ label ,name,options,...rest}=props\r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name} {...rest} >\r\n                {\r\n                    ({field})=>{\r\n                        return options.map(option=>{\r\n                            return(\r\n                                <React.Fragment key={option.key}>\r\n                                    <input type=\"checkbox\" \r\n                                        {...field} \r\n                                        id={option.value} \r\n                                        value={option.value}\r\n                                        checked={field.value.includes(option.value)}\r\n                                    />\r\n                                    <label htmlFor={option.value}>{option.key}</label>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n","import React from 'react'\r\nimport {Field , ErrorMessage } from 'formik';\r\n// import textError from './TextError';\r\nimport DateView from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction DatePicker(props) {\r\n    const {label,name,...rest}=props \r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name}>\r\n                {({form,field})=>{\r\n                    const {setFieldValue}=form;\r\n                    const {value}=field\r\n                    return(\r\n                    <DateView\r\n                        id={name}\r\n                        {...field}\r\n                        {...rest}\r\n                        selected={value}\r\n                        onChange={(val)=>setFieldValue(name,val)}\r\n                    />\r\n                    )\r\n                }}\r\n            </Field>\r\n            <ErrorMessage name={name}>\r\n                {(errorMsg)=>(\r\n                    <div className=\"error\">{errorMsg}</div>\r\n                )}\r\n            </ErrorMessage>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DatePicker\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Textarea from \"./Textarea\";\r\nimport RadioButton from \"./RadioButton\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport DatePicker from \"./DatePicker\";\r\nfunction FormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButton {...rest} />;\r\n    case \"checkbox\":\r\n      return <Checkbox {...rest} />;\r\n    case \"date\":\r\n      return <DatePicker {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default FormikControl;\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CreateButton from \"../../components/Btn/Btn\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"../Form/FormikControl\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction OrderNow() {\r\n  const validationSchema = Yup.object().shape({\r\n    address: Yup.string().required(\"Adress is required\"),\r\n    phoneNumber: Yup.number().required(\"phonenumber is required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  });\r\n  const initialValues = {\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  };\r\n  const onSubmit = (values) => {\r\n    console.log(\"form data\", values);\r\n  };\r\n  return (\r\n    <Container\r\n      maxWidth=\"lg\"\r\n      style={{ display: \"flex\", margin: \"50px\", justifyContent: \"center\" }}\r\n    >\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formik) => (\r\n          <Form>\r\n            <FormikControl\r\n              control=\"input\"\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              type=\"text\"\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              label=\"Phone Number\"\r\n              name=\"phoneNumber\"\r\n              type=\"text\"\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n            />\r\n            <CreateButton\r\n              type=\"submit\"\r\n              text=\"submit\"\r\n              disabled={!(formik.dirty && formik.isValid)}\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OrderNow;\r\n","import React, { useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CreateButton from \"../../components/Btn/Btn\";\r\nimport FormikControl from \"../Form/FormikControl\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/login\";\r\nimport history from \"../../Route/history\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n  useEffect(() => {\r\n    //get users from Api\r\n    props.requestUsersFromApi();\r\n  });\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const ValidationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email format is wrong\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n  const onSubmit = (UserValues, submitProps) => {\r\n    // props.checkLoginUser(UserValues)\r\n    //check if user is in api or not  //if redirect to products\r\n    let found = props.users.find((user) => user.email === UserValues.email); //check for this user in api array\r\n    if (found) {\r\n      history.push(\"/products\");\r\n    }\r\n  };\r\n  return (\r\n    <Container\r\n      maxWidth=\"lg\"\r\n      style={{ display: \"flex\", margin: \"50px\", justifyContent: \"center\" }}\r\n    >\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={ValidationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formik) => (\r\n          <Form>\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email:\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              label=\"Password:\"\r\n            />\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <CreateButton\r\n                color=\"primary\"\r\n                text=\"Login\"\r\n                type=\"submit\"\r\n                disabled={!(formik.dirty && formik.isValid)}\r\n              />\r\n            </div>\r\n            <div>\r\n              If you didn't have an account<Link to=\"/register\">Register</Link>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    requestUsersFromApi: () => dispatch(actions.requestUsersFromApi()),\r\n    checkLoginUser: (user) => dispatch(actions.checkLoginUser(user)),\r\n  };\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.loginReducer.users,\r\n    check: state.loginReducer.check,\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import * as actionType from '../constants/actionTypes';\r\n\r\nexport const requestUsersFromApi =()=>({\r\n    type:actionType.REQUEST_USERS_FROM_FAKE_API,\r\n})\r\n\r\nexport const getUsersFromApi =(users)=>({\r\n    type:actionType.GET_USERS_FROM_FAKE_API,\r\n    payload:{\r\n        users:users\r\n    }\r\n})\r\n\r\nexport const checkLoginUser =(user)=>({\r\n    type:actionType.CHECK_LOGIN_USER,\r\n    payload:{\r\n        user:user,\r\n    }\r\n})\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CreateButton from \"../../components/Btn/Btn\";\r\nimport FormikControl from \"../Form/FormikControl\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nfunction Register() {\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    genderSelect: \"\",\r\n    verifyRadio: \"\",\r\n    favouriteChecbox: [],\r\n    birthday: null,\r\n    password: \"\",\r\n    retypePassword: \"\",\r\n  };\r\n  const ValidationSchema = Yup.object({\r\n    firstName: Yup.string().required(\"First Name is required\"),\r\n    lastName: Yup.string().required(\"Last Name is required\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email format is wrong\"),\r\n    genderSelect: Yup.string().required(\"Gender is required\"),\r\n    verifyRadio: Yup.string().required(\"Verfication method is required\"),\r\n    favouriteChecbox: Yup.array(),\r\n    birthday: Yup.date().required(\"Date is required\").nullable(),\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .min(6, \"password must be 6 chars at least\"),\r\n    // .matches()//regex\r\n    retypePassword: Yup.string().oneOf(\r\n      [Yup.ref(\"password\"), \"\"],\r\n      \"password must be matched\"\r\n    ),\r\n  });\r\n  const onSubmit = (UserValues) => {\r\n    console.log(\"user values\", UserValues);\r\n  };\r\n  const genderOtions = [\r\n    { key: \"Select Your Gender\", value: \"\" },\r\n    { key: \"Male\", value: \"male\" },\r\n    { key: \"Male\", value: \"male\" },\r\n  ];\r\n  const verifyOtions = [\r\n    { key: \"Email\", value: \"email\" },\r\n    { key: \"Phone Number\", value: \"phoneNumber\" },\r\n  ];\r\n  const favouriteOtions = [\r\n    { key: \"Cars\", value: \"cars\" },\r\n    { key: \"Clothes\", value: \"clothes\" },\r\n    { key: \"Beauty\", value: \"beauty\" },\r\n  ];\r\n  return (\r\n    <Container\r\n      maxWidth=\"lg\"\r\n      style={{ display: \"flex\", margin: \"50px\", justifyContent: \"center\" }}\r\n    >\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={ValidationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formik) => (\r\n          <Form>\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              label=\"First Name:\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              label=\"Last Name:\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email:\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <FormikControl\r\n              control=\"select\"\r\n              name=\"genderSelect\"\r\n              label=\"Choose your Gender:\"\r\n              autoComplete=\"off\"\r\n              options={genderOtions}\r\n            />\r\n            <FormikControl\r\n              control=\"radio\"\r\n              name=\"verifyRadio\"\r\n              label=\"Choose your Verification Method:\"\r\n              autoComplete=\"off\"\r\n              options={verifyOtions}\r\n            />\r\n            <FormikControl\r\n              control=\"date\"\r\n              name=\"birthday\"\r\n              label=\"Birthday:\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <FormikControl\r\n              control=\"checkbox\"\r\n              name=\"favouriteChecbox\"\r\n              label=\"Choose your favourites:\"\r\n              autoComplete=\"off\"\r\n              options={favouriteOtions}\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              label=\"Password:\"\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"password\"\r\n              name=\"retypePassword\"\r\n              label=\"Retype Password:\"\r\n            />\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <CreateButton\r\n                color=\"primary\"\r\n                text=\"Register\"\r\n                type=\"submit\"\r\n                disabled={!formik.isValid}\r\n              />\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport history from \"./history\";\r\nimport ProductList from \"../pages/productList/productList\";\r\nimport ProductDetails from \"../pages/productDetails/productDetails\";\r\nimport ReviewOrder from \"../pages/ReviewOrder/ReviewOrder\";\r\nimport OrderNow from \"../pages/UserFormOrderNow/OrderNow\";\r\nimport LoginForm from \"../pages/Login/LoginForm\";\r\nimport Register from \"../pages/Register/Register\";\r\nexport default function Routes({ location }) {\r\n  return (\r\n    <Router history={history} location={location}>\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/products\"]} component={ProductList} />\r\n        <Route path=\"/products/:productId\" component={ProductDetails} />\r\n        <Route path=\"/ReviewOrder\" component={ReviewOrder} />\r\n        <Route path=\"/OrderNow\" component={OrderNow} />\r\n        <Route path=\"/login\" component={LoginForm} />\r\n        <Route path=\"/register\" component={Register} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","//reducer(action,state) //return update state\r\n\r\nimport * as actionType from \"../constants/actionTypes\";\r\nconst initState = {\r\n  cart: [],\r\n  itemsNum: 0,\r\n};\r\nexport default function cartReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case actionType.ADD_ITEM_TO_CART: {\r\n      let newItem = action.payload.newItem;\r\n      let existItem = state.cart.find((item) => item.id === newItem.id); //check if item exist in cart or not\r\n      if (!existItem) {\r\n        newItem.quantity = 1; //if not exist add it with q = 1\r\n        return {\r\n          ...state,\r\n          cartLoader: false,\r\n          newItem,\r\n          itemsNum: state.itemsNum + 1, //inc no of items to badge no\r\n          cart: [...state.cart, newItem], //reload cart\r\n        };\r\n      } else {\r\n        newItem.quantity += 1; //if item is already exit in cart //inc it's quantity\r\n        return {\r\n          ...state,\r\n          cartLoader: false,\r\n          newItem,\r\n          itemsNum: state.itemsNum,\r\n          cart: [...state.cart], //reload cart\r\n        };\r\n      }\r\n    }\r\n    case actionType.DELETE_ITEM_IN_CART: {\r\n      let deletedItem = action.payload.deletedItem;\r\n      deletedItem.quantity = 0; //set quantity of deleted item to 0\r\n      return {\r\n        ...state,\r\n        deletedItem,\r\n        itemsNum: state.itemsNum - 1,\r\n        cart: state.cart.filter((item) => item.id !== deletedItem.id), //filter cart after delete item\r\n      };\r\n    }\r\n    case actionType.INCREMENT_QUANTITY: {\r\n      let item = action.payload.item;\r\n      let newCart = JSON.parse(JSON.stringify(state.cart)); //deep copy\r\n      let index = newCart.findIndex((itemx) => itemx.id === item.id); // find this item in cart\r\n      item.quantity = ++item.quantity; //inc it's q\r\n      newCart.splice(index, 1, item); //replace it with new item\r\n      return {\r\n        ...state,\r\n        cart: [...newCart],\r\n      };\r\n    }\r\n    case actionType.DECREMENT_QUANTITY: {\r\n      let item = action.payload.item;\r\n      let newCart = JSON.parse(JSON.stringify(state.cart)); //deep copy\r\n      let index = state.cart.indexOf(item); // find this item in cart\r\n      item.quantity = --item.quantity; //dec its quantity\r\n\r\n      if (action.payload.item.quantity === 0) {\r\n        //if q=0\r\n        newCart = newCart.filter(\r\n          (product) => product.id !== action.payload.item.id //delete this item\r\n        );\r\n        state.itemsNum = state.itemsNum - 1; //dec no of items in badge\r\n      } else {\r\n        newCart.splice(index, 1, item); //else dec it's quantity\r\n      }\r\n      return {\r\n        ...state,\r\n        cart: [...newCart],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport productsReducer from \"./products\";\r\nimport singleProductReducer from \"./product\";\r\nimport cartReducer from \"./cart\";\r\nimport loginReducer from \"./login\";\r\nconst rootReducers = combineReducers({\r\n  productsReducer,\r\n  singleProductReducer,\r\n  cartReducer,\r\n  loginReducer,\r\n});\r\n\r\nexport default rootReducers;\r\n","//reducer(action,state) //return update state\r\n\r\nimport * as actionType from \"../constants/actionTypes\";\r\nexport default function productsReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case actionType.PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loader: true,\r\n      };\r\n    }\r\n    case actionType.PRODUCT_RESPONSE: {\r\n      return {\r\n        products: action.payload.products,\r\n        loader: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","//reducer(action,state) //return update state\r\n\r\nimport * as actionType from \"../constants/actionTypes\";\r\nexport default function singleProductReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case actionType.PREQUEST_SINGLLE_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        singleProductloader: true,\r\n        id: action.payload.singleProductId,\r\n      };\r\n    }\r\n    case actionType.GET_SINGLLE_PRODUCT: {\r\n      return {\r\n        singleProductloader: false,\r\n        singleProduct: action.payload.singleProduct,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionType from \"../constants/actionTypes\";\r\nexport default function loginReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case actionType.GET_USERS_FROM_FAKE_API: {\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n      };\r\n    }\r\n    case actionType.CHECK_LOGIN_USER: {\r\n      let users = JSON.parse(JSON.stringify(state.users)); //deep copy\r\n      let found = users.find(\r\n        (user) => user.email === action.payload.user.email\r\n      ); //check for this user in api array\r\n      let check = false;\r\n      if (found) check = true;\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        check: check,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const handleRequest = (request) => {\r\n  return request;\r\n};\r\nexport const handleResponse = (response) => {\r\n  return response;\r\n};\r\nexport const handleError = (error) => {\r\n  return Promise.reject({ ...error });\r\n};\r\n","import axios from 'axios';\r\nimport * as Handlers from './handlers/products'\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:\"https://fakestoreapi.com/\"\r\n})\r\n\r\n//interceptors\r\naxiosInstance.interceptors.request.use(\r\n    request=>Handlers.handleRequest(request)\r\n)\r\naxiosInstance.interceptors.response.use(\r\n    response=>Handlers.handleResponse(response),\r\n    error=>Handlers.handleError(error)\r\n)\r\n\r\nexport default axiosInstance;","import axiosInstance from \"../BaseUrl\";\r\nimport * as Handlers from \"../handlers/products\";\r\nexport const getProductsFromApi = async () => {\r\n  return await axiosInstance.get(\"products\");\r\n};\r\n\r\n//interceptors\r\naxiosInstance.interceptors.request.use((request) =>\r\n  Handlers.handleRequest(request)\r\n);\r\naxiosInstance.interceptors.response.use(\r\n  (response) => Handlers.handleResponse(response),\r\n  (error) => Handlers.handleError(error)\r\n);\r\n","import { call, put } from \"redux-saga/effects\";\r\nimport { getProductsFromApi } from \"../../network/api/products\";\r\nimport { showProducts } from \"../actions/actions\";\r\n\r\nfunction* handlGetProducts(action) {\r\n  const response = yield call(getProductsFromApi);\r\n  yield put(showProducts(response.data));\r\n}\r\n\r\nexport { handlGetProducts };\r\n","export const handleRequest = (request) => {\r\n  return request;\r\n};\r\nexport const handleResponse = (response) => {\r\n  return response;\r\n};\r\nexport const handleError = (error) => {\r\n  return Promise.reject({ ...error });\r\n};\r\n","import axiosInstance from \"../BaseUrl\";\r\nimport * as Handlers from \"../handlers/product\";\r\n\r\nexport const getSingleProductFromApi = async (id) => {\r\n  return await axiosInstance.get(\"products/\" + id);\r\n};\r\n\r\n//interceptors\r\naxiosInstance.interceptors.request.use((request) =>\r\n  Handlers.handleRequest(request)\r\n);\r\naxiosInstance.interceptors.response.use(\r\n  (response) => Handlers.handleResponse(response),\r\n  (error) => Handlers.handleError(error)\r\n);\r\n","import { call, put } from \"redux-saga/effects\";\r\nimport { getSingleProductFromApi } from \"../../network/api/product\";\r\nimport { showSingleProduct } from \"../actions/product\";\r\n\r\nfunction* handlGetSingleProduct(action) {\r\n  const response = yield call(\r\n    getSingleProductFromApi,\r\n    action.payload.singleProductId\r\n  );\r\n  yield put(showSingleProduct(response.data));\r\n}\r\n\r\nexport { handlGetSingleProduct };\r\n","export const handleRequest = (request) => {\r\n  return request;\r\n};\r\nexport const handleResponse = (response) => {\r\n  return response;\r\n};\r\nexport const handleError = (error) => {\r\n  return Promise.reject({ ...error });\r\n};\r\n","import axios from \"axios\";\r\nimport * as Handlers from \"./handlers/login\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n});\r\n\r\n//interceptors\r\naxiosInstance.interceptors.request.use((request) =>\r\n  Handlers.handleRequest(request)\r\n);\r\naxiosInstance.interceptors.response.use(\r\n  (response) => Handlers.handleResponse(response),\r\n  (error) => Handlers.handleError(error)\r\n);\r\n\r\nexport default axiosInstance;\r\n","import axiosInstance from \"../login\";\r\n\r\nexport const requestUsersFromApi = async () => {\r\n  return await axiosInstance.get(\"users\");\r\n};\r\n","import { call, put } from \"redux-saga/effects\";\r\nimport { requestUsersFromApi } from \"../../network/api/login\";\r\nimport { getUsersFromApi } from \"../actions/login\";\r\n\r\nfunction* handlGetUsers(action) {\r\n  const response = yield call(requestUsersFromApi);\r\n  yield put(getUsersFromApi(response.data));\r\n}\r\n\r\nexport { handlGetUsers };\r\n","\r\nimport { takeEvery, all } from 'redux-saga/effects';\r\nimport {handlGetProducts} from './products';\r\nimport {handlGetSingleProduct} from './product'\r\nimport {handlGetUsers} from './login'\r\nimport {} from './login'\r\nimport * as actionTypes from '../constants/actionTypes';\r\nfunction* watchAll() {\r\n  yield all([\r\n    takeEvery(actionTypes.PRODUCT_REQUEST,handlGetProducts),\r\n    takeEvery(actionTypes.PREQUEST_SINGLLE_PRODUCT,handlGetSingleProduct),\r\n    takeEvery(actionTypes.REQUEST_USERS_FROM_FAKE_API,handlGetUsers),\r\n  ])\r\n}\r\n \r\nexport default watchAll;","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducers from '../reducers/index'\r\nimport rootSaga from '../saga/index';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n//create saga middleware\r\nconst sagaMiddleWare = createSagaMiddleware();\r\n\r\n//create store and fetch reducers and saga middleware\r\nconst store = createStore(\r\n    rootReducers,composeWithDevTools(\r\n         applyMiddleware(sagaMiddleWare),\r\n    )   \r\n)\r\n\r\n//run saga middleware\r\nsagaMiddleWare.run(rootSaga);\r\n\r\nexport default store;","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default function FadeMenu(props) {\r\n  const { id, iconType, ...rest } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenu}\r\n        color=\"inherit\"\r\n        {...rest}\r\n      >\r\n        {iconType}\r\n      </IconButton>\r\n      <Menu\r\n        id={id}\r\n        anchorEl={anchorEl}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        {props.items}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  CardMedia,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LoadingIndicator from \"../LoadingIndicator/LoadingIndicator\";\r\n\r\nexport default function MediaControlCard({\r\n  title,\r\n  img,\r\n  quantityComp,\r\n  deleteBtn,\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        {img ? (\r\n          <CardMedia\r\n            className={classes.cover}\r\n            image={img}\r\n            title=\"Live from space album cover\"\r\n          />\r\n        ) : (\r\n          <LoadingIndicator />\r\n        )}\r\n      </CardActionArea>\r\n      <CardContent className={classes.content}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          {title}\r\n        </Typography>\r\n        <CardActions>\r\n          <div style={{ textAlign: \"center\", display: \"flex\" }}>\r\n            {quantityComp ? quantityComp : \"\"}\r\n            {{ deleteBtn } ? deleteBtn : \"\"}\r\n          </div>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import MediaControlCard from \"../../components/MediaControlCard/MediaControlCard\";\r\nimport React from \"react\";\r\nimport CreateButton from \"../../components/Btn/Btn\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Quantity from \"../../components/quantity/quantity\";\r\n\r\nfunction Cart(props) {\r\n  const { title, img, onDelete, item } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <MediaControlCard\r\n        className=\"carte\"\r\n        title={title}\r\n        img={img}\r\n        quantityComp={<Quantity item={item} />}\r\n        deleteBtn={\r\n          <CreateButton\r\n            color=\"secondary\"\r\n            text={<DeleteIcon />}\r\n            onClick={onDelete}\r\n          />\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { useStyles } from \"./style\";\r\n//material ui\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  MenuItem,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport FadeMenu from \"../../components/Menu/Menu\";\r\n//custom components\r\nimport Cart from \"../Cart/Cart\";\r\nimport CreateButton from \"../../components/Btn/Btn\";\r\n//route\r\nimport history from \"../../Route/history\";\r\n//actions\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as cartActions from \"../../redux/actions/cart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  const classes = useStyles();\r\n  //actions hooks\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cartReducer.cart);\r\n  const itemsNum = useSelector((state) => state.cartReducer.itemsNum);\r\n\r\n  const removeItemFromCart = (item) => {\r\n    dispatch(cartActions.deleteItemInCart(item));\r\n  };\r\n  const redirectToReviewPage = () => {\r\n    history.push(\"/ReviewOrder\");\r\n  };\r\n  const profileDropDownItems = [\"View/ Edit Profile\", \"Sign out\"];\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{ color: \"white\", textDecoration: \"none\" }}\r\n              onClick={() => history.push(\"/\")}\r\n            >\r\n              Products\r\n            </Link>\r\n          </Typography>\r\n\r\n          <FadeMenu\r\n            aria-label=\"profile\"\r\n            iconType={<AccountCircle />}\r\n            id=\"profile\"\r\n            items={profileDropDownItems.map((item, index) => (\r\n              <MenuItem key={index}>{item}</MenuItem>\r\n            ))}\r\n          />\r\n\r\n          <FadeMenu\r\n            aria-label=\"add to shopping cart\"\r\n            iconType={\r\n              <Badge badgeContent={itemsNum} color=\"secondary\">\r\n                <AddShoppingCartIcon style={{ color: \"white\" }} />\r\n              </Badge>\r\n            }\r\n            id=\"cart\"\r\n            items={(cart || []).slice(0, 3).map((item, index) => {\r\n              return (\r\n                <>\r\n                  <MenuItem key={item.id}>\r\n                    <Cart\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      onDelete={() => removeItemFromCart(item)}\r\n                      item={item}\r\n                    />\r\n                  </MenuItem>\r\n                  {index === (cart || []).slice(0, 3).length - 1 && (\r\n                    <MenuItem style={{ justifyContent: \"center\" }}>\r\n                      <CreateButton\r\n                        color=\"primary\"\r\n                        text=\"Review Order\"\r\n                        onClick={redirectToReviewPage}\r\n                      />\r\n                    </MenuItem>\r\n                  )}\r\n                </>\r\n              );\r\n            })}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"./App.scss\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./Route/index\";\r\nimport store from \"./redux/store/index\";\r\n\r\nimport Header from \"./containers/header/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Header />\r\n          <Routes />\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./styles.scss\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}