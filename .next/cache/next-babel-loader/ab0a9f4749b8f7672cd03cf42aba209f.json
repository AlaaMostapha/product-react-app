{"ast":null,"code":"import _defineProperty from \"C:/Users/Lenovo/Desktop/ibtikar/projects/product_task/product/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionType from \"../constants/actionTypes\";\nexport default function loginReducer(state = {}, action) {\n  switch (action.type) {\n    case actionType.GET_USERS_FROM_FAKE_API:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          users: action.payload.users\n        });\n      }\n\n    case actionType.CHECK_LOGIN_USER:\n      {\n        let users = JSON.parse(JSON.stringify(state.users)); //deep copy\n\n        let found = users.find(user => user.email === action.payload.user.email); //check for this user in api array\n\n        let check = false;\n        if (found) check = true;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: action.payload.user,\n          check: check\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ibtikar/projects/product_task/product/src/redux/reducers/login.js"],"names":["actionType","loginReducer","state","action","type","GET_USERS_FROM_FAKE_API","users","payload","CHECK_LOGIN_USER","JSON","parse","stringify","found","find","user","email","check"],"mappings":";;;;;;AAAA,OAAO,KAAKA,UAAZ,MAA4B,0BAA5B;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAA0C;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,UAAU,CAACK,uBAAhB;AAAyC;AACvC,+CACKH,KADL;AAEEI,UAAAA,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeD;AAFxB;AAID;;AACD,SAAKN,UAAU,CAACQ,gBAAhB;AAAkC;AAChC,YAAIF,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeT,KAAK,CAACI,KAArB,CAAX,CAAZ,CADgC,CACqB;;AACrD,YAAIM,KAAK,GAAGN,KAAK,CAACO,IAAN,CACTC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeZ,MAAM,CAACI,OAAP,CAAeO,IAAf,CAAoBC,KADnC,CAAZ,CAFgC,CAI7B;;AACH,YAAIC,KAAK,GAAG,KAAZ;AACA,YAAIJ,KAAJ,EAAWI,KAAK,GAAG,IAAR;AACX,+CACKd,KADL;AAEEY,UAAAA,IAAI,EAAEX,MAAM,CAACI,OAAP,CAAeO,IAFvB;AAGEE,UAAAA,KAAK,EAAEA;AAHT;AAKD;;AACD;AACE,aAAOd,KAAP;AArBJ;AAuBD","sourcesContent":["import * as actionType from \"../constants/actionTypes\";\r\nexport default function loginReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case actionType.GET_USERS_FROM_FAKE_API: {\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n      };\r\n    }\r\n    case actionType.CHECK_LOGIN_USER: {\r\n      let users = JSON.parse(JSON.stringify(state.users)); //deep copy\r\n      let found = users.find(\r\n        (user) => user.email === action.payload.user.email\r\n      ); //check for this user in api array\r\n      let check = false;\r\n      if (found) check = true;\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        check: check,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}