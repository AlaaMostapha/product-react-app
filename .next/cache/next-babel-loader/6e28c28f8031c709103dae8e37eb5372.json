{"ast":null,"code":"import _defineProperty from \"C:/Users/Lenovo/Desktop/ibtikar/projects/product_task/product/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/Lenovo/Desktop/ibtikar/projects/product_task/product/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ibtikar\\\\projects\\\\product_task\\\\product\\\\src\\\\pages\\\\Form\\\\Checkbox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport TextError from './TextError';\n\nfunction Checkbox(props) {\n  const {\n    label,\n    name,\n    options\n  } = props,\n        rest = _objectWithoutProperties(props, [\"label\", \"name\", \"options\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Field, _objectSpread(_objectSpread({\n      name: name\n    }, rest), {}, {\n      children: ({\n        field\n      }) => {\n        return options.map(option => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n              type: \"checkbox\"\n            }, field), {}, {\n              id: option.value,\n              value: option.value,\n              checked: field.value.includes(option.value)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: option.value,\n              children: option.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, this)]\n          }, option.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 33\n          }, this);\n        });\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: name,\n      component: TextError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ibtikar/projects/product_task/product/src/pages/Form/Checkbox.js"],"names":["React","Field","ErrorMessage","TextError","Checkbox","props","label","name","options","rest","field","map","option","value","includes","key"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAgBC,YAAhB,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAK;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAcC,IAAAA;AAAd,MAA+BH,KAApC;AAAA,QAA8BI,IAA9B,4BAAoCJ,KAApC;;AACA,sBACI;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEE,IAAhB;AAAA,gBAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEC;AAAb,OAAuBE,IAAvB;AAAA,gBAEQ,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAW;AACP,eAAOF,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAE;AACvB,8BACI,QAAC,KAAD,CAAO,QAAP;AAAA,oCACI;AAAO,cAAA,IAAI,EAAC;AAAZ,eACQF,KADR;AAEI,cAAA,EAAE,EAAEE,MAAM,CAACC,KAFf;AAGI,cAAA,KAAK,EAAED,MAAM,CAACC,KAHlB;AAII,cAAA,OAAO,EAAEH,KAAK,CAACG,KAAN,CAAYC,QAAZ,CAAqBF,MAAM,CAACC,KAA5B;AAJb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAO,cAAA,OAAO,EAAED,MAAM,CAACC,KAAvB;AAAA,wBAA+BD,MAAM,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aAAqBH,MAAM,CAACG,GAA5B;AAAA;AAAA;AAAA;AAAA,kBADJ;AAWH,SAZM,CAAP;AAaH;AAhBT;AAAA;AAAA;AAAA;AAAA,YAFJ,eAqBI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAER,IAApB;AAA0B,MAAA,SAAS,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;KA3BQC,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport {Field , ErrorMessage } from 'formik';\r\nimport TextError from './TextError';\r\n\r\nfunction Checkbox(props) {\r\n    const{ label ,name,options,...rest}=props\r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name} {...rest} >\r\n                {\r\n                    ({field})=>{\r\n                        return options.map(option=>{\r\n                            return(\r\n                                <React.Fragment key={option.key}>\r\n                                    <input type=\"checkbox\" \r\n                                        {...field} \r\n                                        id={option.value} \r\n                                        value={option.value}\r\n                                        checked={field.value.includes(option.value)}\r\n                                    />\r\n                                    <label htmlFor={option.value}>{option.key}</label>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n"]},"metadata":{},"sourceType":"module"}