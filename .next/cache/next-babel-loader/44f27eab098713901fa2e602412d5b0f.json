{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducers from \"../reducers/index\";\nimport rootSaga from \"../saga/index\";\nconst sagaMiddleware = createSagaMiddleware();\n\nconst bindMiddleware = middleware => {\n  const arrMiddleware = [middleware];\n\n  if (true) {\n    const {\n      composeWithDevTools\n    } = require(\"redux-devtools-extension\"); // arrMiddleware.push(createLogger());\n\n\n    return composeWithDevTools(applyMiddleware(...arrMiddleware));\n  }\n\n  return applyMiddleware(...arrMiddleware);\n};\n\nfunction configureStore() {\n  const store = createStore(rootReducers, bindMiddleware(sagaMiddleware));\n\n  store.runSagaTask = () => {\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n  };\n\n  store.runSagaTask();\n  return store;\n}\n\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ibtikar/projects/product_task/product/src/redux/store/index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","rootReducers","rootSaga","sagaMiddleware","bindMiddleware","middleware","arrMiddleware","composeWithDevTools","require","configureStore","store","runSagaTask","sagaTask","run","wrapper"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;;AAEA,MAAMI,cAAc,GAAIC,UAAD,IAAgB;AACrC,QAAMC,aAAa,GAAG,CAACD,UAAD,CAAtB;;AAEA,YAA2C;AACzC,UAAM;AAAEE,MAAAA;AAAF,QAA0BC,OAAO,CAAC,0BAAD,CAAvC,CADyC,CAEzC;;;AACA,WAAOD,mBAAmB,CAACR,eAAe,CAAC,GAAGO,aAAJ,CAAhB,CAA1B;AACD;;AACD,SAAOP,eAAe,CAAC,GAAGO,aAAJ,CAAtB;AACD,CATD;;AAWA,SAASG,cAAT,GAA0B;AACxB,QAAMC,KAAK,GAAGZ,WAAW,CAACG,YAAD,EAAeG,cAAc,CAACD,cAAD,CAA7B,CAAzB;;AAEAO,EAAAA,KAAK,CAACC,WAAN,GAAoB,MAAM;AACxBD,IAAAA,KAAK,CAACE,QAAN,GAAiBT,cAAc,CAACU,GAAf,CAAmBX,QAAnB,CAAjB;AACD,GAFD;;AAIAQ,EAAAA,KAAK,CAACC,WAAN;AAEA,SAAOD,KAAP;AACD;;AAED,eAAeI,OAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducers from \"../reducers/index\";\r\nimport rootSaga from \"../saga/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  const arrMiddleware = [middleware];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    // arrMiddleware.push(createLogger());\r\n    return composeWithDevTools(applyMiddleware(...arrMiddleware));\r\n  }\r\n  return applyMiddleware(...arrMiddleware);\r\n};\r\n\r\nfunction configureStore() {\r\n  const store = createStore(rootReducers, bindMiddleware(sagaMiddleware));\r\n\r\n  store.runSagaTask = () => {\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  };\r\n\r\n  store.runSagaTask();\r\n\r\n  return store;\r\n}\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}