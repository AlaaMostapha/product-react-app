{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//reducer(action,state) //return update state\nimport * as actionType from \"../constants/actionTypes\";\nexport default function productsReducer(state = {}, action) {\n  switch (action.type) {\n    case actionType.PRODUCT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loader: true\n        });\n      }\n\n    case actionType.PRODUCT_RESPONSE:\n      {\n        return {\n          products: action.payload.products,\n          loader: false\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ibtikar/projects/product_task/product/src/redux/reducers/products.js"],"names":["actionType","productsReducer","state","action","type","PRODUCT_REQUEST","loader","PRODUCT_RESPONSE","products","payload"],"mappings":";;;;;;AAAA;AAEA,OAAO,KAAKA,UAAZ,MAA4B,0BAA5B;AACA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAG,EAAjC,EAAqCC,MAArC,EAA6C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,UAAU,CAACK,eAAhB;AAAiC;AAC/B,+CACKH,KADL;AAEEI,UAAAA,MAAM,EAAE;AAFV;AAID;;AACD,SAAKN,UAAU,CAACO,gBAAhB;AAAkC;AAChC,eAAO;AACLC,UAAAA,QAAQ,EAAEL,MAAM,CAACM,OAAP,CAAeD,QADpB;AAELF,UAAAA,MAAM,EAAE;AAFH,SAAP;AAID;;AACD;AACE,aAAOJ,KAAP;AAdJ;AAgBD","sourcesContent":["//reducer(action,state) //return update state\r\n\r\nimport * as actionType from \"../constants/actionTypes\";\r\nexport default function productsReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case actionType.PRODUCT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loader: true,\r\n      };\r\n    }\r\n    case actionType.PRODUCT_RESPONSE: {\r\n      return {\r\n        products: action.payload.products,\r\n        loader: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}