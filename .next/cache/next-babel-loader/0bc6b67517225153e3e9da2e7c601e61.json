{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ibtikar\\\\projects\\\\product_task\\\\product\\\\src\\\\pages\\\\productDetailsNext\\\\[id]\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport CreateButton from \"../../../components/Btn/Btn\";\nimport Container from \"@material-ui/core/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as productActions from \"../../../redux/actions/product\";\nimport * as cartActions from \"../../../redux/actions/cart\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\nimport Quantity from \"../../../components/quantity/quantity\";\nimport { useRouter } from \"next/router\";\n\nfunction ProductDetails(props) {\n  _s();\n\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const singleProduct = useSelector(state => state.singleProductReducer.singleProduct);\n  const cart = useSelector(state => state.cartReducer.cart);\n  useEffect(() => {\n    // const { productId } = props.match.params;\n    const {\n      id\n    } = router.query;\n    console.log(router.query.id); // request item from api\n\n    dispatch(productActions.getSingleProduct(id));\n  }, []);\n  useEffect(() => {\n    //check if this item is in cart return it from cart with it's quantity\n    const product = cart.find(product => product.id === singleProduct.id);\n\n    if (product) {\n      dispatch(productActions.showSingleProduct(product));\n    } else {\n      dispatch(productActions.showSingleProduct(singleProduct));\n    }\n  }, [cart]);\n\n  const addItem = singleProduct => {\n    //add item to cart\n    dispatch(cartActions.addItemInCart(singleProduct));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [\"xxx\", singleProduct ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        textAlign: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: singleProduct.image,\n        alt: singleProduct.alt,\n        style: {\n          height: \"250px\",\n          margin: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: singleProduct.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: singleProduct.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: singleProduct.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), singleProduct.quantity ? /*#__PURE__*/_jsxDEV(Quantity, {\n          item: singleProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CreateButton, {\n          color: \"primary\",\n          text: \"Add to cart\",\n          onClick: () => addItem(singleProduct)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductDetails, \"dR8pkg9bJGeaX1JywuESN2sAMkM=\", false, function () {\n  return [useRouter, useDispatch, useSelector, useSelector];\n});\n\n_c = ProductDetails;\nexport default ProductDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ibtikar/projects/product_task/product/src/pages/productDetailsNext/[id]/index.js"],"names":["React","useEffect","CreateButton","Container","useDispatch","useSelector","productActions","cartActions","LoadingIndicator","Quantity","useRouter","ProductDetails","props","router","dispatch","singleProduct","state","singleProductReducer","cart","cartReducer","id","query","console","log","getSingleProduct","product","find","showSingleProduct","addItem","addItemInCart","display","textAlign","image","alt","height","margin","title","description","price","quantity"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport CreateButton from \"../../../components/Btn/Btn\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as productActions from \"../../../redux/actions/product\";\r\nimport * as cartActions from \"../../../redux/actions/cart\";\r\nimport LoadingIndicator from \"../../../components/LoadingIndicator/LoadingIndicator\";\r\nimport Quantity from \"../../../components/quantity/quantity\";\r\nimport { useRouter } from \"next/router\";\r\nfunction ProductDetails(props) {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const singleProduct = useSelector(\r\n    (state) => state.singleProductReducer.singleProduct\r\n  );\r\n  const cart = useSelector((state) => state.cartReducer.cart);\r\n  useEffect(() => {\r\n    // const { productId } = props.match.params;\r\n    const { id } = router.query;\r\n    console.log(router.query.id);\r\n    // request item from api\r\n    dispatch(productActions.getSingleProduct(id));\r\n  }, []);\r\n  useEffect(() => {\r\n    //check if this item is in cart return it from cart with it's quantity\r\n    const product = cart.find((product) => product.id === singleProduct.id);\r\n    if (product) {\r\n      dispatch(productActions.showSingleProduct(product));\r\n    } else {\r\n      dispatch(productActions.showSingleProduct(singleProduct));\r\n    }\r\n  }, [cart]);\r\n\r\n  const addItem = (singleProduct) => {\r\n    //add item to cart\r\n    dispatch(cartActions.addItemInCart(singleProduct));\r\n  };\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      xxx\r\n      {singleProduct ? (\r\n        <div style={{ display: \"flex\", textAlign: \"left\" }}>\r\n          <img\r\n            src={singleProduct.image}\r\n            alt={singleProduct.alt}\r\n            style={{ height: \"250px\", margin: \"10px\" }}\r\n          />\r\n          <div>\r\n            <h3>{singleProduct.title}</h3>\r\n            <h4>Description:</h4>\r\n            <p>{singleProduct.description}</p>\r\n            <div>\r\n              <h4>Price:</h4>\r\n              <p>{singleProduct.price}</p>\r\n            </div>\r\n            {singleProduct.quantity ? (\r\n              <Quantity item={singleProduct} />\r\n            ) : (\r\n              <CreateButton\r\n                color=\"primary\"\r\n                text=\"Add to cart\"\r\n                onClick={() => addItem(singleProduct)}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ProductDetails;\r\n"]},"metadata":{},"sourceType":"module"}